{"version":3,"sources":["App.tsx","components/GoodCard/GoodCard.tsx","components/GoodList/GoodList.tsx","index.tsx"],"names":["SortType","GoodCard","good","name","GoodList","goods","className","map","id","goodsWithId","index","App","useState","DEFAULT","sortType","setSortType","isReversed","setIsReversed","visibleGoods","preparedGoods","sort","good1","good2","name1","name2","ALPHABET","localeCompare","LENGTH","length","reverse","getPreparedGoods","type","onClick","cn","prev","ReactDOM","render","document","getElementById"],"mappings":"6KAyBKA,E,0ECnBQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,oBAAI,UAAQ,OAAZ,SAAoBA,EAAKC,QCCdC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,oBAAIC,UAAU,WAAd,SACGD,EAAME,KAAI,SAACL,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKM,UFQZC,EAbyB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGkCF,KAAI,SAACL,EAAMQ,GAAP,MAAkB,CACxDF,GAAIE,EAAQ,EACZP,KAAMD,O,SAGHF,K,0BAAAA,E,kBAAAA,E,YAAAA,M,KAwCE,IAAMW,EAAgB,WAC3B,MAAgCC,mBAASZ,EAASa,SAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAhCR,SACEb,EADF,GAGG,IADCS,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAa,YAAOd,GAsB1B,OApBAc,EAAcC,MAAK,SAACC,EAAOC,GACzB,IAAMC,EAAQF,EAAMlB,KACdqB,EAAQF,EAAMnB,KAEpB,OAAQW,GACN,KAAKd,EAASyB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKxB,EAAS2B,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITZ,GACFG,EAAcU,UAGTV,EAMcW,CAAiBrB,EAAa,CAAEK,WAAUE,eAW/D,OACE,sBAAKV,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEyB,KAAK,SACLC,QAAS,kBAAMjB,EAAYf,EAASyB,WACpCnB,UAAW2B,IACR,iBACA,CAAE,WAAYnB,IAAad,EAASyB,WALzC,iCAWA,wBACEM,KAAK,SACLC,QAAS,kBAAMjB,EAAYf,EAAS2B,SACpCrB,UAAW2B,IACR,oBACA,CAAE,WAAYnB,IAAad,EAAS2B,SALzC,4BAWA,wBACEI,KAAK,SACLC,QA/BR,WACEf,GAAc,SAAAiB,GAAI,OAAKA,MA+BjB5B,UAAW2B,IACR,oBACD,CAAE,YAAajB,IALnB,sBAWEF,GAAYE,IACZ,wBACEe,KAAK,SACLC,QAhDV,WACEjB,EAAYf,EAASa,SACrBI,GAAc,IA+CNX,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAUD,MAAOa,QG3HvBiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b132ff43.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { Good } from './types/Good';\nimport { GoodList } from './components/GoodList/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst goodsWithId = goodsFromServer.map((good, index) => ({\n  id: index + 1,\n  name: good,\n}));\n\nenum SortType {\n  ALPHABET = 'alphabetically',\n  LENGTH = 'byLength',\n  DEFAULT = '',\n}\n\ninterface Options {\n  sortType: SortType;\n  isReversed: boolean;\n}\n\nfunction getPreparedGoods(\n  goods: Good[],\n  { sortType, isReversed }: Options,\n) {\n  const preparedGoods = [...goods];\n\n  preparedGoods.sort((good1, good2) => {\n    const name1 = good1.name;\n    const name2 = good2.name;\n\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return name1.localeCompare(name2);\n\n      case SortType.LENGTH:\n        return name1.length - name2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.DEFAULT);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsWithId, { sortType, isReversed });\n\n  function resetGoods() {\n    setSortType(SortType.DEFAULT);\n    setIsReversed(false);\n  }\n\n  function reverseGoods() {\n    setIsReversed(prev => !prev);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.ALPHABET)}\n          className={cn(\n            ('button is-info'),\n            ({ 'is-light': sortType !== SortType.ALPHABET }),\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.LENGTH)}\n          className={cn(\n            ('button is-success'),\n            ({ 'is-light': sortType !== SortType.LENGTH }),\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={reverseGoods}\n          className={cn(\n            ('button is-warning'),\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed) && (\n          <button\n            type=\"button\"\n            onClick={resetGoods}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import { Good } from '../../types/Good';\n\ntype Props = {\n  good: Good;\n};\n\nexport const GoodCard: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">{good.name}</li>\n);\n","import React from 'react';\nimport { Good } from '../../types/Good';\nimport { GoodCard } from '../GoodCard/GoodCard';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"GoodList\">\n    {goods.map((good) => (\n      <GoodCard\n        key={good.id}\n        good={good}\n      />\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}